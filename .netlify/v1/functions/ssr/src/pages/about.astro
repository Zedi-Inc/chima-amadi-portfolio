---
import { Container } from '@/components/odyssey-theme';
import Layout from '../layouts/Page.astro';
import Heading from '@/components/sections/heros/Heading.astro';
import SectionTop from '@/components/sections/heros/SectionTop.astro';
import { about } from '@/sanity/lib/sanity-utils';
import PortableText from '@/components/PortableText.astro';
import type { About } from '@/sanity/sanity.types';
import AOSInit from '@/components/AOSInit.astro';

const seo = {
	title: 'About | Dr. Chima Amadi',
	description:
		'Explore the life, education, and achievements of Dr. Chima Amadi, a renowned scholar, advocate for good governance, and entrepreneur.',
};

let aboutContent: { data: About[] } = { data: [] };
try {
	aboutContent = await about();
} catch (error) {
	console.error('Failed to fetch about content:', error);
}

const heroContent = aboutContent.data[0]?.heroContent?.[0] ?? null;

const mainContent = aboutContent.data[0]?.aboutContent;
const philanthropyActivities = aboutContent.data[0]?.activities?.[0] ?? null;
---

<Layout {seo}>
	<AOSInit />
	<section class="pb-10 lg:px-10">
		<SectionTop>
			<div slot="text-container">
				<Heading>
					<h2
						slot="headingText"
						class="text-lg md:text-2xl font-medium tracking-[1px]"
					>
						{heroContent?.name}
					</h2>
				</Heading>
				<div class="text-sm md:text-base xl:text-base">
					<PortableText portableText={heroContent?.description} />
				</div>
			</div>
			<PortableText slot="image-container" portableText={heroContent?.image} />
		</SectionTop>
		{
			mainContent?.length ? (
				mainContent.splice(0, mainContent.length - 1).map(item => (
					<div class="px-4 lg:px-10 mt-8" data-aos="fade-up" data-aos-duration="1000">
						<Heading>
							<h2
								slot="headingText"
								class="text-lg md:text-2xl font-medium tracking-[1px]"
							>
								{item?.name || 'Default Name'}
							</h2>
						</Heading>
						<div class="text-sm md:text-base">
							{item?.description?.map((desc, index) => (
								<PortableText key={index} portableText={desc} />
							))}
						</div>
					</div>
				))
			) : (
				<p>No content available.</p>
			)
		}

		<Container>
			<div
				class="hero-section__section mt-10 flex flex-col md:flex-row-reverse items-center justify-between px-4 lg:px-8"
			>
				<div class="hero-section__text">
					<div>
						<Heading>
							<h2
								slot="headingText"
								class="text-lg md:text-2xl font-medium tracking-[1px]"
							>
								{philanthropyActivities?.name}
							</h2>
						</Heading>
						<div class="text-sm md:text-base">
							<p>
								{philanthropyActivities?.description}
							</p>
						</div>
					</div>
				</div>
				<div class="hero-section__image">
					<PortableText portableText={philanthropyActivities?.image} />
				</div>
			</div>
			{
				mainContent?.length ? (
					mainContent
						.splice(mainContent.length - 1, mainContent.length)
						.map(item => (
							<div class="px-4 lg:px-10 mt-8">
								<Heading>
									<h2
										slot="headingText"
										class="text-lg md:text-2xl font-medium tracking-[1px]"
									>
										{item?.name || 'Default Name'}
									</h2>
								</Heading>
								<div class="text-sm md:text-base">
									{item?.description?.map((desc, index) => (
										<PortableText key={index} portableText={desc} />
									))}
								</div>
							</div>
						))
				) : (
					<p>No content available.</p>
				)
			}
		</Container>
	</section>

	<style>
		.hero-section__section {
			min-height: clamp(90vh, 100vw, calc(100vh - var(--navbar-height)));
			align-items: center;
			gap: 1rem;
		}
		.hero-section__text {
			justify-self: center;
			max-width: 25rem;
		}
		.hero-btns__container {
			display: flex;
			align-items: center;
			gap: 1rem;
		}
		.hero-btns__container {
			margin-right: 1rem;
		}
		.hero-section__image {
			display: flex;
		}
		.hero-section__image :global(img) {
			width: 100%;
			height: 100%;
			max-height: 600px;
			object-fit: cover;
			border-radius: var(--theme-shape-radius);
		}
		@media (max-width: 768px) {
			.hero-section__section {
				margin: 2rem auto 0 auto;
				grid-template-columns: 1fr;
			}
		}
		p {
			margin-top: 6px;
			line-height: 20px;
		}
		@media screen and (width > 780px) {
			p {
				line-height: 24px;
			}
		}
	</style>
</Layout>
